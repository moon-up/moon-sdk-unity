/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using NUnit.Framework;

using com.usemoon.MoonSDK.Client;
using com.usemoon.MoonSDK.Api;
// uncomment below to import models
//using com.usemoon.MoonSDK.Model;

namespace com.usemoon.MoonSDK.Test.Api
{
    /// <summary>
    ///  Class for testing OneinchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OneinchApiTests : IDisposable
    {
        private OneinchApi instance;

        public OneinchApiTests()
        {
            instance = new OneinchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OneinchApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OneinchApi
            //Assert.IsType<OneinchApi>(instance);
        }

        /// <summary>
        /// Test ApproveCallData
        /// </summary>
        [Test]
        public void ApproveCallDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.ApproveCallData(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ApproveSpender
        /// </summary>
        [Test]
        public void ApproveSpenderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.ApproveSpender(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test Protocols
        /// </summary>
        [Test]
        public void ProtocolsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.Protocols(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test Quote
        /// </summary>
        [Test]
        public void QuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.Quote(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test Swap
        /// </summary>
        [Test]
        public void SwapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountName = null;
            //string authorization = null;
            //GetSwapDto getSwapDto = null;
            //var response = instance.Swap(accountName, authorization, getSwapDto);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test Tokens
        /// </summary>
        [Test]
        public void TokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.Tokens(body);
            //Assert.IsType<Object>(response);
        }
    }
}
