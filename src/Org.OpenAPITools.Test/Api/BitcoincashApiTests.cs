/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BitcoincashApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BitcoincashApiTests : IDisposable
    {
        private BitcoincashApi instance;

        public BitcoincashApiTests()
        {
            instance = new BitcoincashApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BitcoincashApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BitcoincashApi
            //Assert.IsType<BitcoincashApi>(instance);
        }

        /// <summary>
        /// Test CreateBitcoinCashAccount
        /// </summary>
        [Fact]
        public void CreateBitcoinCashAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //BitcoinCashInput bitcoinCashInput = null;
            //var response = instance.CreateBitcoinCashAccount(authorization, bitcoinCashInput);
            //Assert.IsType<AccountAPIResponse>(response);
        }

        /// <summary>
        /// Test GetBitcoinCashAccount
        /// </summary>
        [Fact]
        public void GetBitcoinCashAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string accountName = null;
            //var response = instance.GetBitcoinCashAccount(authorization, accountName);
            //Assert.IsType<AccountAPIResponse>(response);
        }

        /// <summary>
        /// Test ListBitcoinCashAccounts
        /// </summary>
        [Fact]
        public void ListBitcoinCashAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //var response = instance.ListBitcoinCashAccounts(authorization);
            //Assert.IsType<AccountAPIResponse>(response);
        }

        /// <summary>
        /// Test SignBitcoinCashTransaction
        /// </summary>
        [Fact]
        public void SignBitcoinCashTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string accountName = null;
            //BitcoinCashTransactionInput bitcoinCashTransactionInput = null;
            //var response = instance.SignBitcoinCashTransaction(authorization, accountName, bitcoinCashTransactionInput);
            //Assert.IsType<BitcoinCashAPIResponse>(response);
        }
    }
}
