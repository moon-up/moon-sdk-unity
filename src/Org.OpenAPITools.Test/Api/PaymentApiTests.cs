/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing PaymentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentApiTests : IDisposable
    {
        private PaymentApi instance;

        public PaymentApiTests()
        {
            instance = new PaymentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PaymentApi
            //Assert.IsType<PaymentApi>(instance);
        }

        /// <summary>
        /// Test MoralisWebhook
        /// </summary>
        [Fact]
        public void MoralisWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IWebhook iWebhook = null;
            //var response = instance.MoralisWebhook(id, iWebhook);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test PaymentCreatePaymentIntent
        /// </summary>
        [Fact]
        public void PaymentCreatePaymentIntentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //CreatePaymentIntentInput createPaymentIntentInput = null;
            //var response = instance.PaymentCreatePaymentIntent(authorization, createPaymentIntentInput);
            //Assert.IsType<PaymentIntentResponse>(response);
        }

        /// <summary>
        /// Test PaymentDeletePaymentIntent
        /// </summary>
        [Fact]
        public void PaymentDeletePaymentIntentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //var response = instance.PaymentDeletePaymentIntent(authorization, id);
            //Assert.IsType<PaymentIntentResponse>(response);
        }

        /// <summary>
        /// Test PaymentGetAllPaymentIntents
        /// </summary>
        [Fact]
        public void PaymentGetAllPaymentIntentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //var response = instance.PaymentGetAllPaymentIntents(authorization);
            //Assert.IsType<List<PaymentIntentResponse>>(response);
        }

        /// <summary>
        /// Test PaymentGetAvailableChains
        /// </summary>
        [Fact]
        public void PaymentGetAvailableChainsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PaymentGetAvailableChains();
            //Assert.IsType<List<string>>(response);
        }

        /// <summary>
        /// Test PaymentGetPaymentIntent
        /// </summary>
        [Fact]
        public void PaymentGetPaymentIntentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //var response = instance.PaymentGetPaymentIntent(authorization, id);
            //Assert.IsType<PaymentIntentResponse>(response);
        }

        /// <summary>
        /// Test PaymentUpdatePaymentIntent
        /// </summary>
        [Fact]
        public void PaymentUpdatePaymentIntentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //CreatePaymentIntentInput createPaymentIntentInput = null;
            //var response = instance.PaymentUpdatePaymentIntent(authorization, id, createPaymentIntentInput);
            //Assert.IsType<PaymentIntentResponse>(response);
        }

        /// <summary>
        /// Test TatumWebhook
        /// </summary>
        [Fact]
        public void TatumWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Object body = null;
            //var response = instance.TatumWebhook(id, body);
            //Assert.IsType<Object>(response);
        }
    }
}
